{"ast":null,"code":"import _classCallCheck from \"/Users/bishkazareenchand/Desktop/LectureMate/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bishkazareenchand/Desktop/LectureMate/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bishkazareenchand/Desktop/LectureMate/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bishkazareenchand/Desktop/LectureMate/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bishkazareenchand/Desktop/LectureMate/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bishkazareenchand/Desktop/LectureMate/src/pages/professor/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, List, Rate, Button } from 'antd';\nimport img from './pic.jpg';\nvar initList = ['Amy', 'Louis.Bishka', 'Kristine', 'Emma', 'Lucas', 'Martin', 'Lucy', 'Michael', 'Josh'];\n\nvar getRandom = function getRandom(Max) {\n  var Min = 0;\n  var Range = Max - Min;\n  var Rand = Math.random();\n  var num = Min + Math.round(Rand * Range);\n  return num;\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      noRpList: initList,\n      rpList: initList,\n      rpName: '',\n      noRpName: '',\n      rpMap: {}\n    };\n\n    _this.hanleRpClick = function () {\n      var _this$state = _this.state,\n          rpList = _this$state.rpList,\n          rpMap = _this$state.rpMap;\n      var index = getRandom(rpList.length - 1);\n      var name = rpList[index];\n\n      if (!name) {\n        return;\n      }\n\n      var times = rpMap[name];\n\n      _this.setState({\n        rpName: name\n      });\n\n      if (times) {\n        rpMap[name] = times + 1;\n        alert(name + ' has been called ' + (times + 1) + ' times!');\n      } else {\n        rpMap[name] = 1;\n      }\n\n      _this.setState({\n        rpMap: rpMap\n      });\n    };\n\n    _this.handleNoRpClick = function () {\n      var noRpList = _this.state.noRpList;\n\n      if (noRpList.length === 0) {\n        alert('All student have been called once before!');\n      }\n\n      var index = getRandom(noRpList.length - 1);\n      var name = noRpList[index];\n      noRpList.splice(index, 1);\n\n      _this.setState({\n        noRpName: name,\n        noRpList: noRpList\n      });\n    };\n\n    _this.hadnleReset = function () {\n      _this.setState({\n        noRpList: initList,\n        rpList: initList,\n        rpName: '',\n        noRpName: '',\n        rpMap: {}\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          rpName = _this$state2.rpName,\n          noRpName = _this$state2.noRpName;\n      var btnStyle = {\n        width: '100%',\n        marginTop: 15,\n        height: 60,\n        cursor: 'pointer',\n        background: '#1890ff',\n        color: 'white',\n        fontSize: 18\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Card, {\n        bordered: false,\n        style: {\n          width: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          paddingTop: 150\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/output\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: btnStyle,\n        onClick: this.hanleRpClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Call a Student\"))))); // <div style={{  display: 'flex', justifyContent: 'center',alignItems: 'center'}}>\n      //     <div style={{display: 'flex'}}>\n      //         {/* <img src={img} alt=\"\" width=\"300\" height=\"300\" /> */}\n      //         <div style={{ marginLeft: 30, display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\n      //             {/* <Output rpName={rpName} noRpName={noRpName}></Output> */}\n      //             <div>\n      //                 <Button style={btnStyle} onClick={this.hanleRpClick}>Any Student</Button> <br />\n      //                 <Button style={{ ...btnStyle, background: '#e6a23c'}} onClick={this.handleNoRpClick}> Previously Uncalled Student</Button> <br />\n      //                 <Button style={{ ...btnStyle, background: '#f56c6c'}} onClick={this.hadnleReset}> Reset</Button>\n      //             </div>\n      //         </div>\n      //     </div>\n      // </div>\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/bishkazareenchand/Desktop/LectureMate/src/pages/professor/index.js"],"names":["React","Component","Link","Card","List","Rate","Button","img","initList","getRandom","Max","Min","Range","Rand","Math","random","num","round","App","state","noRpList","rpList","rpName","noRpName","rpMap","hanleRpClick","index","length","name","times","setState","alert","handleNoRpClick","splice","hadnleReset","btnStyle","width","marginTop","height","cursor","background","color","fontSize","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card, List, Rate, Button } from 'antd'\nimport img from './pic.jpg'\nconst initList = ['Amy', 'Louis.Bishka', 'Kristine', 'Emma', 'Lucas', 'Martin', 'Lucy', 'Michael', 'Josh']\nconst getRandom = Max => {\n\tvar Min = 0\n\tvar Range = Max - Min\n\tvar Rand = Math.random()\n\tvar num = Min + Math.round(Rand * Range)\n\treturn num\n}\nclass App extends React.Component {\n\tstate = {\n\t\tnoRpList: initList,\n\t\trpList: initList,\n\t\trpName: '',\n\t\tnoRpName: '',\n\t\trpMap: {}\n\t}\n\thanleRpClick = () => {\n\t\tconst { rpList, rpMap } = this.state\n\t\tconst index = getRandom(rpList.length - 1)\n\t\tconst name = rpList[index]\n\t\tif (!name) {\n\t\t\treturn\n\t\t}\n\t\tconst times = rpMap[name]\n\t\tthis.setState({\n\t\t\trpName: name\n\t\t})\n\t\tif (times) {\n\t\t\trpMap[name] = times + 1\n\t\t\talert(name + ' has been called ' + (times + 1) + ' times!')\n\t\t} else {\n\t\t\trpMap[name] = 1\n\t\t}\n\t\tthis.setState({\n\t\t\trpMap\n\t\t})\n\t}\n\thandleNoRpClick = () => {\n\t\tconst { noRpList } = this.state\n\t\tif (noRpList.length === 0) {\n\t\t\talert('All student have been called once before!')\n\t\t}\n\t\tconst index = getRandom(noRpList.length - 1)\n\t\tconst name = noRpList[index]\n\t\tnoRpList.splice(index, 1)\n\t\tthis.setState({\n\t\t\tnoRpName: name,\n\t\t\tnoRpList\n\t\t})\n\t}\n\thadnleReset = () => {\n\t\tthis.setState({\n\t\t\tnoRpList: initList,\n\t\t\trpList: initList,\n\t\t\trpName: '',\n\t\t\tnoRpName: '',\n\t\t\trpMap: {}\n\t\t})\n\t}\n\trender() {\n\t\tconst { rpName, noRpName } = this.state\n\t\tconst btnStyle = {\n\t\t\twidth: '100%',\n\t\t\tmarginTop: 15,\n\t\t\theight: 60,\n\t\t\tcursor: 'pointer',\n\t\t\tbackground: '#1890ff',\n\t\t\tcolor: 'white',\n\t\t\tfontSize: 18\n\t\t}\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Card bordered={false} style={{ width: '100%' }}>\n\t\t\t\t\t<div style={{ paddingTop: 150 }}>\n\t\t\t\t\t\t<Link to=\"/output\">\n\t\t\t\t\t\t\t<Button style={btnStyle} onClick={this.hanleRpClick}>\n                                Call a Student\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t{/* <br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Link to=\"/output\">\n\t\t\t\t\t\t\t<Button style={{ ...btnStyle, background: '#e6a23c' }} onClick={this.handleNoRpClick}>\n\t\t\t\t\t\t\t\tPreviously Uncalled Student\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Button style={{ ...btnStyle, background: '#f56c6c' }} onClick={this.hadnleReset}>\n\t\t\t\t\t\t\tReset\n\t\t\t\t\t\t</Button> */}\n\t\t\t\t\t</div>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t)\n\n\t\t// <div style={{  display: 'flex', justifyContent: 'center',alignItems: 'center'}}>\n\t\t//     <div style={{display: 'flex'}}>\n\t\t//         {/* <img src={img} alt=\"\" width=\"300\" height=\"300\" /> */}\n\t\t//         <div style={{ marginLeft: 30, display: 'flex', justifyContent: 'center', flexDirection: 'column'}}>\n\t\t//             {/* <Output rpName={rpName} noRpName={noRpName}></Output> */}\n\t\t//             <div>\n\t\t//                 <Button style={btnStyle} onClick={this.hanleRpClick}>Any Student</Button> <br />\n\t\t//                 <Button style={{ ...btnStyle, background: '#e6a23c'}} onClick={this.handleNoRpClick}> Previously Uncalled Student</Button> <br />\n\t\t//                 <Button style={{ ...btnStyle, background: '#f56c6c'}} onClick={this.hadnleReset}> Reset</Button>\n\t\t//             </div>\n\t\t//         </div>\n\t\t//     </div>\n\t\t// </div>\n\t}\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}